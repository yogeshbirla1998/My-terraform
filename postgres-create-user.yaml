- name: Add PostgreSQL users and set permissions
  hosts: localhost
  gather_facts: no

  vars:
    restIP: "{{ restIP }}"
    restPORT: "{{ restPORT }}"
    serverName: "{{ serverName }}"
    admin_username: "{{ admin_username }}"
    admin_password: "{{ admin_password }}"
    db_name: "{{ db_name }}"
    postgres_ip: "{{ postgres_ip }}"
    postgres_port: "{{ postgres_port }}"
    username: "{{ username }}"
    password: "{{ password }}"
    schema: "schema_{{ username }}.*"
    priviledges_db: "{{ priviledges_db }}"
    priviledges_tables: "{{ priviledges_tables }}"
  tasks:
    - name: Install PostgreSQL client package
      apt:
        name: postgresql-client
      become: yes

    - name: Create PostgreSQL users
      shell: |
        psql -h {{ postgres_ip }} -p {{ postgres_port }} -U {{ admin_username }} -d {{ db_name }} -c "CREATE ROLE {{ username }} WITH LOGIN PASSWORD '{{ password }}';"
      environment:
        PGPASSWORD: "{{ admin_password }}"
      ignore_errors: yes
      register: result_create_user

    - name: Set PostgreSQL user permissions
      shell: |
        psql -h {{ postgres_ip }} -p {{ postgres_port }} -U {{ admin_username }} -d {{ db_name }} -c "
        ALTER DEFAULT PRIVILEGES FOR ROLE {{ username }} IN SCHEMA public
        GRANT {{ priviledges_tables }} ON TABLES TO {{ username }};
        GRANT {{ priviledges_db }} ON DATABASE {{ db_name }} TO {{ username }};
        ALTER ROLE {{ username }} WITH LOGIN;"
      environment:
        PGPASSWORD: "{{ admin_password }}"
      register: result_set_permissions
      
    - name: Print the create user result
      debug:
        var: result_create_user

    - name: Print the set permissions result
      debug:
        var: result_set_permissions

    - name: Store database info 
      uri:
        url: "http://{{ restIP }}:{{ restPORT }}/platform/v1/database/saveUser"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body: >
          {
            "serverName": "{{ serverName }}",
            "username": "{{ username }}",
            "password": "{{ password }}",
            "db_name": "{{ db_name }}",
            "priviledges_db": "LOGIN,{{ priviledges_db }}",
            "priviledges_tables": "{{ priviledges_tables }}"
          }
      when: result_set_permissions.rc == 0
      register: post_req_User

    - debug:
        var: post_req_User
