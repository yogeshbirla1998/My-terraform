---
- name: Deploy PostgreSQL Helm Chart
  hosts: localhost
  vars:
    helm_chart_name: bitnami/postgresql
    helm_release_name: postgres-testing
    postgres_db_name: platform
    postgres_username: user1
    postgres_password: pass1
    postgres_admin_password: Admin@123
    number_of_replicas: 2
    local_directory_path: /bitnami/postgresql/Tools_intallation_container/
    deployment_namespace: testing

  tasks:
    - name: Check if Helm is installed
      command: helm version --short
      register: helm_version
      ignore_errors: yes

    - name: Install Helm if not installed
      command: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      when: helm_version.rc != 0

    - name: Add Bitnami Helm repository
      command: helm repo add bitnami https://charts.bitnami.com/bitnami
      ignore_errors: yes

    - name: Uninstall PostgreSQL Helm Chart if it exists
      command: helm uninstall {{ helm_release_name }} -n {{ deployment_namespace }}
      ignore_errors: yes

    - name: Deploy PostgreSQL Helm Chart
      command: >
        helm install {{ helm_release_name }} {{ helm_chart_name }} -n {{ deployment_namespace }}
        --set global.postgresql.auth.postgresPassword={{ postgres_admin_password }}
        --set global.postgresql.auth.username={{ postgres_username }}
        --set global.postgresql.auth.password={{ postgres_password }}
        --set global.postgresql.auth.database={{ postgres_db_name }}
        --set readReplicas.replicaCount={{ number_of_replicas }}
        --set primary.persistence.mountPath={{ local_directory_path }}
        --set primary.persistence.size=2Gi
        --set volumePermissions.enabled=true
        --set primary.service.type=NodePort
        --set primary.service.nodePorts.postgresql=32009
      register: helm_install

    - name: Wait for all pods to be in a 'Running' state
      command: kubectl wait --for=condition=Ready pod -l app.kubernetes.io/instance={{ helm_release_name }} -n {{ deployment_namespace }} --timeout=300s
      when: helm_install.rc == 0

    - name: Print Kubernetes objects created by the Helm chart
      command: kubectl get all -n {{ deployment_namespace }} -l release={{ helm_release_name }}
      register: k8s_objects
      when: helm_install.rc == 0

    - name: Print NodePort service details
      command: kubectl get svc -n {{ deployment_namespace }} {{ helm_release_name }}-postgresql -o=json
      register: nodeport_details
      when: helm_install.rc == 0

